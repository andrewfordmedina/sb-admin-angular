{"version":3,"file":"ngx-tagify.js","sources":["../../projects/ngx-tagify/src/lib/tagify.service.ts","../../projects/ngx-tagify/src/lib/tagify.component.ts","../../projects/ngx-tagify/src/lib/tagify.module.ts","../../../projects/ngx-tagify/src/public-api.ts","../../../projects/ngx-tagify/src/ngx-tagify.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport Tagify from '@yaireo/tagify';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TagifyService {\n\n  private tagifyMap = new Map<string, Tagify>();\n\n  constructor() { }\n\n  /**\n   * Adds a tagify instance, so it is available via service. Used internally.\n   */\n  add(name: string, tagify: Tagify): void {\n    if (this.tagifyMap.get(name)) {\n      console.warn(`There already exists a tagify instance with name ${name}!`);\n      return;\n    }\n    this.tagifyMap.set(name, tagify);\n  }\n\n  /**\n   * Get tagify instance for full access to tagify API.\n   */\n  get(name: string): Tagify {\n    return this.tagifyMap.get(name);\n  }\n\n  /**\n   * Removes a tagify instance from service. Used internally.\n   */\n  remove(name: string): void {\n    this.tagifyMap.delete(name);\n  }\n\n}\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter, forwardRef,\n  Input,\n  OnDestroy,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { asyncScheduler, BehaviorSubject, fromEvent, merge, Observable, Subject } from 'rxjs';\nimport { takeUntil, throttleTime } from 'rxjs/operators';\nimport Tagify, { TagData, TagifySettings } from '@yaireo/tagify';\nimport { TagifyService } from './tagify.service';\n\n@Component({\n  selector: 'tagify',\n  template: `<input [ngClass]=\"inputClassValue\" #inputRef/>\n    <span style=\"display: none\"><ng-content></ng-content></span>`,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TagifyComponent),\n    multi: true\n  }]\n})\nexport class TagifyComponent implements AfterViewInit, ControlValueAccessor, OnDestroy {\n\n  private valueData: string|TagData[];\n  private valueType = 'undefined';\n  private onChange: any = Function.prototype;\n  private onTouched: any = Function.prototype;\n\n  private unsubscribe$ = new Subject<void>();\n  private value$ = new BehaviorSubject<string|TagData[]>(null);\n  private tagify: Tagify;\n  private skip = false;\n\n  inputClassValue = '';\n  readonlyValue = false;\n\n  @ViewChild('inputRef', {static: true}) inputRef: ElementRef<HTMLInputElement>;\n\n  @Input() settings: TagifySettings = {};\n  @Input() name = '';\n  @Input() whitelist: Observable<string[]|TagData[]>;\n  @Input() set inputClass(v: string) {\n    this.setTagsClass(v);\n    this.inputClassValue = v;\n  }\n  @Input() set readonly(v: boolean) {\n    this.readonlyValue = !!v;\n    this.setReadonly();\n  }\n\n  get value(): string|TagData[] {\n    return this.valueData;\n  }\n\n  set value(v: string|TagData[]) {\n    if (v !== this.valueData) {\n      this.valueData = v;\n      this.onChange(v);\n    }\n  }\n\n  @Output() add = new EventEmitter();\n  @Output() remove = new EventEmitter();\n  @Output() tInput = new EventEmitter<string>();\n\n  constructor(\n    private tagifyService: TagifyService,\n    private element: ElementRef<HTMLElement>\n  ) { }\n\n  ngAfterViewInit(): void {\n    this.settings.callbacks = this.settings.callbacks || {};\n\n    if (!this.settings.callbacks.hasOwnProperty('add')) {\n      this.settings.callbacks.add = () => this.add.emit({\n        tags: this.tagify.value,\n        added: this.tagify.value[this.tagify.value.length - 1]\n      });\n    }\n\n    if (!this.settings.callbacks.hasOwnProperty('remove')) {\n      this.settings.callbacks.remove = () => this.remove.emit(this.tagify.value);\n    }\n\n    const innerText = this.element.nativeElement.textContent;\n\n    this.tagify = new Tagify(this.inputRef.nativeElement, this.settings);\n\n    // add to service if name is provided\n    if (this.name.length) {\n      this.tagifyService.add(this.name, this.tagify);\n    }\n\n    this.setReadonly();\n\n    // if there is some text inside component, load this value and skip first change check\n    if (innerText.length) {\n      this.tagify.loadOriginalValues(innerText);\n      this.skip = true;\n      setTimeout(() => {\n        this.setValue();\n      });\n    }\n\n    // listen to value changes from outside\n    this.value$\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(tags => {\n\n        if (!tags) { return; }\n\n        if (this.skip) {\n          this.skip = false;\n          return;\n        }\n\n        if (this.valueType === 'undefined') {\n          this.valueType = typeof tags;\n        }\n\n        // if string is passed, e.g. via reactive forms\n        if (typeof tags === 'string') {\n          this.tagify.loadOriginalValues(tags);\n          setTimeout(() => {\n            this.setValue();\n          });\n          return;\n        }\n\n        // add all tags (already existing tags will be skipped\n        this.tagify.addTags(tags, false, true);\n\n        // remove all tags that are not part of value anymore\n        this.tagify.value.forEach(v => {\n          if (!tags.find(t => t.value === v.value)) {\n            // somehow removeTags() with string parameter doesn't always find the tag element\n            // this is a workaround for finding the right tag element\n            const tagElm = this.tagify.getTagElms().find(el => el.attributes.getNamedItem('value').textContent === v.value);\n            this.tagify.removeTags(tagElm);\n          }\n        });\n\n      });\n\n    // listen to tagify events\n    this.tagify.on('input', e => {\n      this.tInput.emit(e.detail.value);\n      if (this.valueType === 'string' && this.tagify.settings.mode === 'mix') {\n        this.value = this.tagify.getMixedTagsAsString();\n      }\n    });\n\n    merge(\n      fromEvent(this.tagify, 'add'),\n      fromEvent(this.tagify, 'remove')\n    )\n      .pipe(\n        // throttle used to reduce number of value changes when adding/removing a bunch of tags\n        throttleTime(0, asyncScheduler, { leading: false, trailing: true }),\n        takeUntil(this.unsubscribe$)\n      )\n      .subscribe(() => {\n        this.setValue();\n      });\n\n    // listen to suggestions updates\n    if (this.whitelist) {\n      this.whitelist\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(list => {\n          this.tagify.settings.whitelist = list;\n        });\n    }\n  }\n\n  writeValue(tags: string|TagData[]) {\n    this.value$.next(tags);\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  private setValue(): void {\n    if (this.valueType === 'string') {\n      this.value = this.tagify.DOM.originalInput.value;\n    } else {\n      this.value = this.tagify.value.slice();\n    }\n  }\n\n  /**\n   * Tagify creates a `tags` element to which the classes of the `input` element are applied.\n   * Changes of `inputClass` are applied automatically to the `input` element, but have to be\n   * manually applied to the `tags` element.\n   */\n  private setTagsClass(v: string): void {\n    const tagsElement = this.element.nativeElement.querySelector('tags');\n    if (tagsElement) {\n      tagsElement.classList.remove(...this.inputClassValue.split(/\\s+/));\n      tagsElement.classList.add(...v.split(/\\s+/));\n    }\n  }\n\n  private setReadonly() {\n    if (this.tagify) {\n      this.tagify.setReadonly(this.readonlyValue);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n\n    this.tagify.destroy();\n\n    if (this.name.length) {\n      this.tagifyService.remove(this.name);\n    }\n  }\n\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TagifyComponent } from './tagify.component';\nimport { TagifyService } from './tagify.service';\n\n@NgModule({\n  declarations: [ TagifyComponent ],\n  imports: [ CommonModule ],\n  exports: [ TagifyComponent ],\n  providers: [ TagifyService ]\n})\nexport class TagifyModule {\n  static forRoot(): ModuleWithProviders<TagifyModule> {\n    return {\n      ngModule: TagifyModule,\n      providers: [ TagifyService ]\n    };\n  }\n}\n","/*\n * Public API Surface of ngx-tagify\n */\nimport Tagify, { TagData, TagifySettings } from '@yaireo/tagify';\n\nexport { Tagify, TagData, TagifySettings };\nexport * from './lib/tagify.service';\nexport * from './lib/tagify.component';\nexport * from './lib/tagify.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}