{"version":3,"sources":["../../projects/ngx-tagify/src/lib/tagify.service.ts","../../../node_modules/tslib/tslib.es6.js","../../projects/ngx-tagify/src/lib/tagify.component.ts","../../projects/ngx-tagify/src/lib/tagify.module.ts"],"names":["TagifyService","this","tagifyMap","Map","prototype","add","name","tagify","get","console","warn","set","remove","delete","Injectable","args","providedIn","Object","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","TagifyComponent","tagifyService","element","valueType","onChange","Function","onTouched","unsubscribe$","Subject","value$","BehaviorSubject","skip","inputClassValue","readonlyValue","settings","EventEmitter","tInput","defineProperty","v","setTagsClass","setReadonly","valueData","ngAfterViewInit","_this","callbacks","hasOwnProperty","emit","tags","added","innerText","nativeElement","textContent","Tagify","inputRef","loadOriginalValues","setTimeout","setValue","pipe","takeUntil","subscribe","addTags","forEach","find","t","tagElm","getTagElms","el","attributes","getNamedItem","removeTags","on","detail","mode","getMixedTagsAsString","merge","fromEvent","throttleTime","asyncScheduler","leading","trailing","whitelist","list","writeValue","registerOnChange","fn","registerOnTouched","DOM","originalInput","slice","tagsElement","querySelector","_a","classList","apply","split","_b","ngOnDestroy","complete","destroy","Component","selector","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ElementRef","ViewChild","static","Input","Output","TagifyModule","forRoot","ngModule","NgModule","declarations","imports","CommonModule","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport Tagify from '@yaireo/tagify';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TagifyService {\n\n  private tagifyMap = new Map<string, Tagify>();\n\n  constructor() { }\n\n  /**\n   * Adds a tagify instance, so it is available via service. Used internally.\n   */\n  add(name: string, tagify: Tagify): void {\n    if (this.tagifyMap.get(name)) {\n      console.warn(`There already exists a tagify instance with name ${name}!`);\n      return;\n    }\n    this.tagifyMap.set(name, tagify);\n  }\n\n  /**\n   * Get tagify instance for full access to tagify API.\n   */\n  get(name: string): Tagify {\n    return this.tagifyMap.get(name);\n  }\n\n  /**\n   * Removes a tagify instance from service. Used internally.\n   */\n  remove(name: string): void {\n    this.tagifyMap.delete(name);\n  }\n\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter, forwardRef,\n  Input,\n  OnDestroy,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { asyncScheduler, BehaviorSubject, fromEvent, merge, Observable, Subject } from 'rxjs';\nimport { takeUntil, throttleTime } from 'rxjs/operators';\nimport Tagify, { TagData, TagifySettings } from '@yaireo/tagify';\nimport { TagifyService } from './tagify.service';\n\n@Component({\n  selector: 'tagify',\n  template: `<input [ngClass]=\"inputClassValue\" #inputRef/>\n    <span style=\"display: none\"><ng-content></ng-content></span>`,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TagifyComponent),\n    multi: true\n  }]\n})\nexport class TagifyComponent implements AfterViewInit, ControlValueAccessor, OnDestroy {\n\n  private valueData: string|TagData[];\n  private valueType = 'undefined';\n  private onChange: any = Function.prototype;\n  private onTouched: any = Function.prototype;\n\n  private unsubscribe$ = new Subject<void>();\n  private value$ = new BehaviorSubject<string|TagData[]>(null);\n  private tagify: Tagify;\n  private skip = false;\n\n  inputClassValue = '';\n  readonlyValue = false;\n\n  @ViewChild('inputRef', {static: true}) inputRef: ElementRef<HTMLInputElement>;\n\n  @Input() settings: TagifySettings = {};\n  @Input() name = '';\n  @Input() whitelist: Observable<string[]|TagData[]>;\n  @Input() set inputClass(v: string) {\n    this.setTagsClass(v);\n    this.inputClassValue = v;\n  }\n  @Input() set readonly(v: boolean) {\n    this.readonlyValue = !!v;\n    this.setReadonly();\n  }\n\n  get value(): string|TagData[] {\n    return this.valueData;\n  }\n\n  set value(v: string|TagData[]) {\n    if (v !== this.valueData) {\n      this.valueData = v;\n      this.onChange(v);\n    }\n  }\n\n  @Output() add = new EventEmitter();\n  @Output() remove = new EventEmitter();\n  @Output() tInput = new EventEmitter<string>();\n\n  constructor(\n    private tagifyService: TagifyService,\n    private element: ElementRef<HTMLElement>\n  ) { }\n\n  ngAfterViewInit(): void {\n    this.settings.callbacks = this.settings.callbacks || {};\n\n    if (!this.settings.callbacks.hasOwnProperty('add')) {\n      this.settings.callbacks.add = () => this.add.emit({\n        tags: this.tagify.value,\n        added: this.tagify.value[this.tagify.value.length - 1]\n      });\n    }\n\n    if (!this.settings.callbacks.hasOwnProperty('remove')) {\n      this.settings.callbacks.remove = () => this.remove.emit(this.tagify.value);\n    }\n\n    const innerText = this.element.nativeElement.textContent;\n\n    this.tagify = new Tagify(this.inputRef.nativeElement, this.settings);\n\n    // add to service if name is provided\n    if (this.name.length) {\n      this.tagifyService.add(this.name, this.tagify);\n    }\n\n    this.setReadonly();\n\n    // if there is some text inside component, load this value and skip first change check\n    if (innerText.length) {\n      this.tagify.loadOriginalValues(innerText);\n      this.skip = true;\n      setTimeout(() => {\n        this.setValue();\n      });\n    }\n\n    // listen to value changes from outside\n    this.value$\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(tags => {\n\n        if (!tags) { return; }\n\n        if (this.skip) {\n          this.skip = false;\n          return;\n        }\n\n        if (this.valueType === 'undefined') {\n          this.valueType = typeof tags;\n        }\n\n        // if string is passed, e.g. via reactive forms\n        if (typeof tags === 'string') {\n          this.tagify.loadOriginalValues(tags);\n          setTimeout(() => {\n            this.setValue();\n          });\n          return;\n        }\n\n        // add all tags (already existing tags will be skipped\n        this.tagify.addTags(tags, false, true);\n\n        // remove all tags that are not part of value anymore\n        this.tagify.value.forEach(v => {\n          if (!tags.find(t => t.value === v.value)) {\n            // somehow removeTags() with string parameter doesn't always find the tag element\n            // this is a workaround for finding the right tag element\n            const tagElm = this.tagify.getTagElms().find(el => el.attributes.getNamedItem('value').textContent === v.value);\n            this.tagify.removeTags(tagElm);\n          }\n        });\n\n      });\n\n    // listen to tagify events\n    this.tagify.on('input', e => {\n      this.tInput.emit(e.detail.value);\n      if (this.valueType === 'string' && this.tagify.settings.mode === 'mix') {\n        this.value = this.tagify.getMixedTagsAsString();\n      }\n    });\n\n    merge(\n      fromEvent(this.tagify, 'add'),\n      fromEvent(this.tagify, 'remove')\n    )\n      .pipe(\n        // throttle used to reduce number of value changes when adding/removing a bunch of tags\n        throttleTime(0, asyncScheduler, { leading: false, trailing: true }),\n        takeUntil(this.unsubscribe$)\n      )\n      .subscribe(() => {\n        this.setValue();\n      });\n\n    // listen to suggestions updates\n    if (this.whitelist) {\n      this.whitelist\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(list => {\n          this.tagify.settings.whitelist = list;\n        });\n    }\n  }\n\n  writeValue(tags: string|TagData[]) {\n    this.value$.next(tags);\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  private setValue(): void {\n    if (this.valueType === 'string') {\n      this.value = this.tagify.DOM.originalInput.value;\n    } else {\n      this.value = this.tagify.value.slice();\n    }\n  }\n\n  /**\n   * Tagify creates a `tags` element to which the classes of the `input` element are applied.\n   * Changes of `inputClass` are applied automatically to the `input` element, but have to be\n   * manually applied to the `tags` element.\n   */\n  private setTagsClass(v: string): void {\n    const tagsElement = this.element.nativeElement.querySelector('tags');\n    if (tagsElement) {\n      tagsElement.classList.remove(...this.inputClassValue.split(/\\s+/));\n      tagsElement.classList.add(...v.split(/\\s+/));\n    }\n  }\n\n  private setReadonly() {\n    if (this.tagify) {\n      this.tagify.setReadonly(this.readonlyValue);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n\n    this.tagify.destroy();\n\n    if (this.name.length) {\n      this.tagifyService.remove(this.name);\n    }\n  }\n\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TagifyComponent } from './tagify.component';\nimport { TagifyService } from './tagify.service';\n\n@NgModule({\n  declarations: [ TagifyComponent ],\n  imports: [ CommonModule ],\n  exports: [ TagifyComponent ],\n  providers: [ TagifyService ]\n})\nexport class TagifyModule {\n  static forRoot(): ModuleWithProviders<TagifyModule> {\n    return {\n      ngModule: TagifyModule,\n      providers: [ TagifyService ]\n    };\n  }\n}\n"]}