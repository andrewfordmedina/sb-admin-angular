{"version":3,"sources":["./src/app/login/login-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/login.module.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login.component';\n\nconst routes: Routes = [{ path: '', component: LoginComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","import { errorMessage } from './../_services/errorMessageService';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthenticationService } from '../_services/authentication.service';\nimport { first } from 'rxjs/operators';\nimport { ReactiveFormsModule } from '@angular/forms'\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  error = '';\n\n  constructor(\n      private formBuilder: FormBuilder,\n      private route: ActivatedRoute,\n      private router: Router,\n      private authenticationService: AuthenticationService,\n      private errorMessage: errorMessage\n  ) { \n      // redirect to home if already logged in\n      if (this.authenticationService.currentUserValue) { \n          this.router.navigate(['/login']);\n      }\n    \n  }\n\n  ngOnInit() {\n      this.loginForm = this.formBuilder.group({\n          username: ['', Validators.required],\n          password: ['', Validators.required]\n      });\n\n      // get return url from route parameters or default to '/'\n      this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n      this.error = this.errorMessage.serviceData ;\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.loginForm.controls; }\n\n  onSubmit() {\n      this.submitted = true;\n\n      // stop here if form is invalid\n      if (this.loginForm.invalid) {\n          return;\n      }\n\n      this.loading = true;\n      this.authenticationService.login(this.f.username.value, this.f.password.value)\n          .pipe(first())\n          .subscribe(\n              data => {\n                  this.router.navigate(['/home']);\n              },\n              error => {\n                //   console.log(`message ${error}`)\n                console.log(\"error is here\");\n                console.log(`error is ${error}`);\n                  this.error = error;\n                  this.loading = false;\n                  this.errorMessage.errorWasInvoked =false;\n              });\n  }\n\n}\n","<div class=\"container\" >\n\n    <!-- Outer Row -->\n    <div class=\"row justify-content-center\">\n\n      <div class=\"col-xl-10 col-lg-12 col-md-9\">\n\n        <div class=\"card o-hidden border-0 shadow-lg my-5\">\n          <div class=\"card-body p-0\">\n            <!-- Nested Row within Card Body -->\n            <div class=\"row\">\n              <div class=\"col-lg-6 d-none d-lg-block bg-login-image\"></div>\n              <div class=\"col-lg-6\">\n                <div class=\"p-5\">\n                  <div class=\"text-center\">\n                    <h1 class=\"h4 text-gray-900 mb-4\">Welcome Back!</h1>\n                  </div>\n<!--                   \n                  <form class=\"user\">\n                    <div class=\"form-group\">\n                      <input type=\"email\" class=\"form-control form-control-user\" id=\"exampleInputEmail\" aria-describedby=\"emailHelp\" placeholder=\"Enter Email Address...\">\n                    </div>\n                    <div class=\"form-group\">\n                      <input type=\"password\" class=\"form-control form-control-user\" id=\"exampleInputPassword\" placeholder=\"Password\">\n                    </div>\n                    <div class=\"form-group\">\n                      <div class=\"custom-control custom-checkbox small\">\n                        <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck\">\n                        <label class=\"custom-control-label\" for=\"customCheck\">Remember Me</label>\n                      </div>\n                    </div>\n                    <a href=\"index.html\" class=\"btn btn-primary btn-user btn-block\">\n                      Login\n                    </a>\n                    <hr>\n                    <a href=\"index.html\" class=\"btn btn-google btn-user btn-block\">\n                      <i class=\"fab fa-google fa-fw\"></i> Login with Google\n                    </a>\n                    <a href=\"index.html\" class=\"btn btn-facebook btn-user btn-block\">\n                      <i class=\"fab fa-facebook-f fa-fw\"></i> Login with Facebook\n                    </a>\n                  </form> -->\n                         \n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"user\">\n              <div class=\"form-group\">\n                  <label for=\"username\">Username</label>\n                  <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n                  <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                      <div *ngIf=\"f.username.errors.required\">Username is required</div>\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                  <label for=\"password\">Password</label>\n                  <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                  <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                      <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                  </div>\n              </div>\n              <button [disabled]=\"loading\" class=\"btn btn-primary\">\n                  <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                  Login\n              </button>\n              <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\n          </form>\n                  <hr>\n                  <div class=\"text-center\">\n                    <a class=\"small\" href=\"forgot-password.html\">Forgot Password?</a>\n                  </div>\n                  <div class=\"text-center\">\n                    <a class=\"small\" href=\"register.html\">Create an Account!</a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n    </div>\n\n  </div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class LoginModule { }\n"],"sourceRoot":"webpack:///"}